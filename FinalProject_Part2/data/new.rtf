{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <WiFi.h>\
#include <PubSubClient.h>\
\
// WiFi\
const char *ssid = "MyCharterWiFifd-2G"; // Enter your WiFi name\
const char *password = "rusticmango074";  // Enter WiFi password\
\
// MQTT Broker\
const char *mqtt_broker = "Ser-Test@broker.emqx.io:1883"; \
const char *topic = "testtopic/#";\
const char *mqtt_username = "Serly_test";\
const char *mqtt_password = "Vellavaroosh2000*";\
const int mqtt_port = 1883;\
\
WiFiClient espClient;\
PubSubClient client(espClient);\
\
void setup() \
\{\
 // Set software serial baud to 115200;\
 Serial.begin(115200);\
 // connecting to a WiFi network\
 WiFi.begin(ssid, password);\
 while (WiFi.status() != WL_CONNECTED) \
 \{\
     delay(500);\
     Serial.println("Connecting to WiFi..");\
 \}\
 Serial.println("Connected to the WiFi network");\
 //connecting to a mqtt broker\
 client.setServer(mqtt_broker, mqtt_port);\
 client.setCallback(callback);\
 while (!client.connected()) \
 \{\
     String client_id = "esp32-client-";\
     client_id += String(WiFi.macAddress());\
     Serial.printf("The client %s connects to the public mqtt broker\\n", client_id.c_str());\
     \
     if (client.connect(client_id.c_str(), mqtt_username, mqtt_password)) \
     \{\
         Serial.println("Public emqx mqtt broker connected");\
     \} \
     else \
     \{\
         Serial.print("failed with state ");\
         Serial.print(client.state());\
         delay(2000);\
     \}\
 \}\
 // publish and subscribe\
 client.publish(topic, "Hi EMQX I'm ESP32 ^^");\
 client.subscribe(topic);\
\}\
\
void callback(char *topic, byte *payload, unsigned int length) \
\{\
 Serial.print("Message arrived in topic: ");\
 Serial.println(topic);\
 Serial.print("Message:");\
 \
 for (int i = 0; i < length; i++) \
 \{\
     Serial.print((char) payload[i]);\
 \}\
 Serial.println();\
 Serial.println("-----------------------");\
\}\
\
void loop() \
\{\
 client.loop();\
\}}